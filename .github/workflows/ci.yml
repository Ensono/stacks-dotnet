name: Run taskctl

# on:
#   push:
#     branches: [master]
#   pull_request:
#     branches: [master]

on: [push]

env:
  TaskctlVersion: '1.4.2'
  docker_image_tag: ${{env.GITHUB_RUN_NUMBER}}-${{env.GITHUB_HEAD_REF}}
  docker_image_name: stacks-api
jobs:
  Lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: ./build/github/templates/install-taskctl
      - run: taskctl lint
        env:
          TF_FILE_LOCATION: deploy/aws/app/kube

  build:
    needs: lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: ./build/github/templates/install-taskctl
      - run: taskctl build
        env:
          # AWS
          TF_FILE_LOCATION: deploy/aws/app/kube
          FUNCTIONAL_TESTS_SRC_DIR: src/tests/Functional
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_ORG: amido
          SONAR_URL: "https://sonarcloud.io"
          SONAR_PROPERTIES: '/d:sonar.cs.opencover.reportsPaths="/app/coverage/*.opencover.xml" /d:sonar.exclusions="**/*Tests" /d:sonar.coverage.exclusions="**/*Tests"'
          PROJECT_NAME: stacks-dotnet
          BUILD_BUILDNUMBER: 0.0.${{env.GITHUB_RUN_NUMBER}}
          # Dotnet Build
          SELF_REPO_SRC: src/api
          # Docker
          DOCKER_CONTAINER_REGISTRY_NAME: $(docker_container_registry_name_nonprod).azurecr.io
          REGISTRY_RESOURCE_GROUP: $(docker_container_registry_rg_name_nonprod)

    # Publish test results

    # Publish test artifact

  deploy-to-dev:
    # needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: ./build/github/templates/install-taskctl
      - run: taskctl infrastructure
        env:
          ENV_NAME: DEV
          # AWS
          AWS_ACCESS_KEY: testkey
          AWS_SECRET_KEY: dummykey
          # Terraform Backend Configuration
          TF_FILE_LOCATION: deploy/aws/app/kube
