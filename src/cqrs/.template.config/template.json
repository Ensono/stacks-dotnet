{
	"$schema": "http://json.schemastore.org/template",
	"author": "stacks@ensono.com",
	"classifications": [
		"Stacks",
		"Application",
		"Infrastructure",
		"CQRS",
		"Events",
		"WebAPI"
	],
	"name": "Ensono Stacks CQRS Web API",
	"identity": "Ensono.Stacks.CQRS.WebApi.CSharp",
	"groupIdentity": "Ensono.Stacks.CQRS.WebApi",
	"shortName": "stacks-cqrs",
	"tags": {
		"language": "C#",
		"type": "project"
	},
	"sourceName": "xxENSONOxx.xxSTACKSxx",
	"preferNameDirectory": true,
	"symbols": {
		"domain": {
			"type": "parameter",
			"isRequired": true,
			"replaces": "Menu",
			"fileRename": "Menu",
			"defaultValue": "DOMAIN",
			"forms": {
				"global": [
					"identity",
					"lowerCase"
				]
			}
		},
		"eventPublisher": {
			"type": "parameter",
			"datatype": "choice",
			"defaultValue": "None",
			"choices": [
				{
					"choice": "ServiceBus",
					"description": "Targets Azure Service Bus for publishing events."
				},
				{
					"choice": "EventHub",
					"description": "Targets Azure Event Hubs for publishing events."
				},
				{
					"choice": "AwsSns",
					"description": "Targets AWS SNS for publishing events."
				},
				{
					"choice": "None",
					"description": "Use a dummy event publisher"
				}
			],
			"description": "Adds event publishing."
		},
		"database": {
			"type": "parameter",
			"datatype": "choice",
			"defaultValue": "InMemoryDb",
			"choices": [
				{
					"choice": "CosmosDb",
					"description": "Targets Azure CosmosDB for storing data."
				},
				{
					"choice": "DynamoDb",
					"description": "Targets AWS DynamoDB for storing data."
				},
				{
					"choice": "InMemoryDb",
					"description": "Targets an In-Memory database for storing data."
				}
			],
			"description": "Adds saving to database."
		},
		"cloudProvider": {
			"type": "parameter",
			"datatype": "choice",
			"defaultValue": "None",
			"choices": [
				{
					"choice": "Azure",
					"description": "Targets Azure DevOps"
				},
				{
					"choice": "AWS",
					"description": "Targets AWS pipelines"
				},
				{
					"choice": "GCP",
					"description": "Targets Google Cloud Platform"
				},
				{
					"choice": "None",
					"description": "Targets no platform and leaves all provider templates"
				}

			],
			"description": "Adds cloud provider build pipelines."
		},
		"cicdProvider": {
			"type": "parameter",
			"datatype": "choice",
			"defaultValue": "None",
			"choices": [
				{
					"choice": "AZDO",
					"description": "Targets Azure DevOps for CI/CD templates"
				},
				{
					"choice": "GHA",
					"description": "Targets GitHub Actions for CI/CD templates"
				},
				{
					"choice": "None",
					"description": "Targets no platform and leaves all provider templates"
				}

			],
			"description": "Adds specified CI/CD provider build pipelines."
		},
		"CosmosDb": {
			"type": "computed",
			"value": "(database == \"CosmosDb\")"
		},
		"DynamoDb": {
			"type": "computed",
			"value": "(database == \"DynamoDb\")"
		},
		"InMemoryDb": {
			"type": "computed",
			"value": "(database == \"InMemoryDb\")"
		},
		"EventPublisherServiceBus": {
			"type": "computed",
			"value": "(eventPublisher == \"ServiceBus\")"
		},
		"EventPublisherEventHub": {
			"type": "computed",
			"value": "(eventPublisher == \"EventHub\")"
		},
		"EventPublisherAwsSns": {
			"type": "computed",
			"value": "(eventPublisher == \"AwsSns\")"
		},
		"EventPublisherNone": {
			"type": "computed",
			"value": "(eventPublisher == \"None\")"
		},
		"CloudProviderAzure": {
			"type": "computed",
			"value": "(cloudProvider == \"Azure\")"
		},
		"CloudProviderAws": {
			"type": "computed",
			"value": "(cloudProvider == \"AWS\")"
		},
		"CloudProviderGcp": {
			"type": "computed",
			"value": "(cloudProvider == \"GCP\")"
		},
		"CloudProviderNone": {
			"type": "computed",
			"value": "(cloudProvider == \"None\")"
		},
		"CiCdAzure": {
			"type": "computed",
			"value": "(cicdProvider == \"AZDO\")"
		},
		"CiCdGitHub": {
			"type": "computed",
			"value": "(cicdProvider == \"GHA\")"
		},
		"CiCdNone": {
			"type": "computed",
			"value": "(cicdProvider == \"None\")"
		}
	},
	"sources": [
		{
			"source": "../../",
			"include": [
				"build/**",
				"deploy/**",
				"taskctl.yaml",
				"stackscli.yml",
				".gitignore",
				".gitattributes",
				".terraform-version",
				"yamllint.conf",
				"src/cqrs/**",
				"src/shared/**"
			],
			"exclude": [
				"**/[Bb]in/**",
				"**/[Oo]bj/**",
				"**/.template.config/**",
				"**/*.filelist",
				"**/*.user",
				"**/*.lock.json",
				"**/.git/**",
				"**/.vs/**",
				"**/.vscode/**",
				"_rels/**",
				"package/**",
				"**/*.nuspec",
				"*Content_Types*.xml",
				"**/.terraform/**",
				"**/terraform.tfstate",
				"**/.terraform.lock.hcl",
				"**/.idea/**"
			],
			"rename": {
				"_gitignore": ".gitignore",
				"_gitattributes": ".gitattributes",
				"build/github/aws/ci.yml": ".github/workflows/ci.yml",
				"build/github/aws/env/cqrs.env": ".github/workflows/ci.env",
				"build/azDevOps/azure/ci.yml": "build/azDevOps/azure/ci.yml",
				"build/azDevOps/azure/ci-cqrs-vars.yml": "build/azDevOps/azure/ci-vars.yml"
			},
			"modifiers": [
				{
					"condition": "(CosmosDb)",
					"exclude": [
                        "**/src/api/xxENSONOxx.xxSTACKSxx.Common/Converters/***",
                        "**/src/api/xxENSONOxx.xxSTACKSxx.Infrastructure/Abstractions/DynamoDb*",
                        "**/src/api/xxENSONOxx.xxSTACKSxx.Infrastructure/Abstractions/IDynamoDb*",
                        "**/src/api/xxENSONOxx.xxSTACKSxx.Infrastructure/Configuration/DynamoDb*",
                        "**/src/api/xxENSONOxx.xxSTACKSxx.Infrastructure/Logging/DynamoDb*",
						"**/src/api/xxENSONOxx.xxSTACKSxx.Infrastructure/Repositories/DynamoDbMenuRepository.cs",
                        "**/src/api/xxENSONOxx.xxSTACKSxx.Infrastructure.UnitTests/DynamoDb*",
						"**/src/api/xxENSONOxx.xxSTACKSxx.Infrastructure.IntegrationTests/DynamoDbMenuRepositoryTests.cs",
						"**/src/api/xxENSONOxx.xxSTACKSxx.Infrastructure.IntegrationTests/InMemoryMenuRepositoryTests.cs",
						"**/src/api/xxENSONOxx.xxSTACKSxx.Infrastructure.IntegrationTests/InMemoryMenuRepositoryAutoDataAttribute.cs",
						"**/src/api/xxENSONOxx.xxSTACKSxx.Domain.UnitTests/DynamoDbCategoryConverterTests.cs"
					]
				},
				{
					"condition": "(DynamoDb)",
					"exclude": [
                        "**/src/api/xxENSONOxx.xxSTACKSxx.Common/Exceptions/CosmosDb/***",
						"**/src/api/xxENSONOxx.xxSTACKSxx.Infrastructure/Abstractions/CosmosDb*",
                        "**/src/api/xxENSONOxx.xxSTACKSxx.Infrastructure/Configuration/CosmosDb*",
                        "**/src/api/xxENSONOxx.xxSTACKSxx.Infrastructure/Logging/CosmosDb*",
						"**/src/api/xxENSONOxx.xxSTACKSxx.Infrastructure/Repositories/CosmosDbMenuRepository.cs",
						"**/src/api/xxENSONOxx.xxSTACKSxx.Infrastructure/Utilities/AsyncLazy.cs",
						"**/src/api/xxENSONOxx.xxSTACKSxx.Infrastructure.IntegrationTests/CosmosDb/**",
						"**/src/api/xxENSONOxx.xxSTACKSxx.Infrastructure.IntegrationTests/CosmosDbMenuRepositoryTests.cs",
						"**/src/api/xxENSONOxx.xxSTACKSxx.Infrastructure.IntegrationTests/InMemoryMenuRepositoryTests.cs",
						"**/src/api/xxENSONOxx.xxSTACKSxx.Infrastructure.IntegrationTests/InMemoryMenuRepositoryAutoDataAttribute.cs",
						"**/src/api/xxENSONOxx.xxSTACKSxx.Infrastructure.UnitTests/CosmosDbMenuRepositoryTests.cs",
						"**/src/api/xxENSONOxx.xxSTACKSxx.CQRS.UnitTests/HandlerTests.cs",
						"**/src/api/xxENSONOxx.xxSTACKSxx.API.ComponentTests/Fixtures/CreateCategoryFixture.cs",
						"**/src/api/xxENSONOxx.xxSTACKSxx.API.ComponentTests/Features/CreateCategoryFeature.cs"
					]
				},
				{
					"condition": "(!CosmosDb && !DynamoDb)",
					"exclude": [
                        "**/src/api/xxENSONOxx.xxSTACKSxx.Common/Converters/**",
                        "**/src/api/xxENSONOxx.xxSTACKSxx.Common/Exceptions/CosmosDb/***",
                        "**/src/api/xxENSONOxx.xxSTACKSxx.Infrastructure/Abstractions/**",
                        "**/src/api/xxENSONOxx.xxSTACKSxx.Infrastructure/Configuration/CosmosDb*",
                        "**/src/api/xxENSONOxx.xxSTACKSxx.Infrastructure/Configuration/DynamoDb*",
                        "**/src/api/xxENSONOxx.xxSTACKSxx.Infrastructure/Logging/CosmosDb*",
                        "**/src/api/xxENSONOxx.xxSTACKSxx.Infrastructure/Logging/DynamoDb*",
                        "**/src/api/xxENSONOxx.xxSTACKSxx.Infrastructure/Utilities/AsyncLazy.cs",
                        "**/src/api/xxENSONOxx.xxSTACKSxx.Infrastructure/Repositories/DynamoDbMenuRepository.cs",
						"**/src/api/xxENSONOxx.xxSTACKSxx.Infrastructure/Repositories/CosmosDbMenuRepository.cs",
						"**/src/api/xxENSONOxx.xxSTACKSxx.Infrastructure.IntegrationTests/CosmosDbMenuRepositoryTests.cs",
                        "**/src/api/xxENSONOxx.xxSTACKSxx.Infrastructure.IntegrationTests/CosmosDb/**",
						"**/src/api/xxENSONOxx.xxSTACKSxx.Infrastructure/Repositories/DynamoDbMenuRepository.cs",
						"**/src/api/xxENSONOxx.xxSTACKSxx.Infrastructure.IntegrationTests/DynamoDbMenuRepositoryTests.cs",
						"**/src/api/xxENSONOxx.xxSTACKSxx.Domain.UnitTests/DynamoDbCategoryConverterTests.cs",
						"**/src/api/xxENSONOxx.xxSTACKSxx.Infrastructure.UnitTests/CosmosDbMenuRepositoryTests.cs",
						"**/src/api/xxENSONOxx.xxSTACKSxx.Infrastructure.UnitTests/DynamoDbMenuRepositoryTests.cs"
					]
				},
				{
					"condition": "(EventPublisherAwsSns)",
					"exclude": [
						"**/src/api/xxENSONOxx.xxSTACKSxx.Infrastructure/Fakes/DummyEventPublisher.cs"
					]
				},
                {
                    "condition": "(!EventPublisherAwsSns)",
                    "exclude": [
                        "**/src/api/xxENSONOxx.xxSTACKSxx.Infrastructure/Publishers/SnsEventPublisher.cs",
                        "**/src/api/xxENSONOxx.xxSTACKSxx.Infrastructure/Logging/SnsLogDefinition.cs",
                        "**/src/api/xxENSONOxx.xxSTACKSxx.Infrastructure/Configuration/AwsSnsConfiguration.cs",
                        "**/src/api/xxENSONOxx.xxSTACKSxx.Infrastructure.UnitTests/SnsEventPublisherTests.cs"
                    ]
                },
                {
                    "condition": "(!EventPublisherEventHub)",
                    "exclude": [
                        "**/src/api/xxENSONOxx.xxSTACKSxx.Infrastructure/Publishers/EventHubEventPublisher.cs",
                        "**/src/api/xxENSONOxx.xxSTACKSxx.Infrastructure/Serialization/IMessageReader.cs",
                        "**/src/api/xxENSONOxx.xxSTACKSxx.Infrastructure/Serialization/JsonMessageSerializer.cs",
                        "**/src/api/xxENSONOxx.xxSTACKSxx.Infrastructure.UnitTests/DummyEventAes.cs",
                        "**/src/api/xxENSONOxx.xxSTACKSxx.Infrastructure.UnitTests/JsonMessageSerializerTests.cs",
                        "**/src/api/xxENSONOxx.xxSTACKSxx.Infrastructure/Configuration/EventHubConfiguration.cs",
                        "**/src/api/xxENSONOxx.xxSTACKSxx.Infrastructure/Configuration/EventHubConsumerConfiguration.cs",
                        "**/src/api/xxENSONOxx.xxSTACKSxx.Infrastructure/Configuration/EventHubEntityConfiguration.cs",
                        "**/src/api/xxENSONOxx.xxSTACKSxx.Infrastructure/Configuration/EventHubPublisherConfiguration.cs",
                        "**/src/api/xxENSONOxx.xxSTACKSxx.Infrastructure/Consumers/EventConsumer.cs",
                        "**/src/api/xxENSONOxx.xxSTACKSxx.Infrastructure/Consumers/IEventConsumer.cs"
                    ]
                },
                {
                    "condition": "(!EventPublisherEventHub && !EventPublisherSns)",
                    "exclude": [
                        "**/src/api/xxENSONOxx.xxSTACKSxx.Infrastructure/Extensions/ServiceCollectionExtensions.cs"
                    ]
                },
				{
					"condition": "(CloudProviderAzure)",
					"exclude": [
						"**/build/azDevOps/aws/**",
						"**/build/azDevOps/gcp/**",
						"**/build/azDevOps/azure/ensono/**",
						"**/build/azDevOps/azure/ci-simple-api-vars.yml",
						"**/build/azDevOps/azure/ci-functions.yml",
						"**/build/azDevOps/azure/ci-cosmosdb-worker-vars.yml",
						"**/build/azDevOps/azure/ci-asb-listener-vars.yml",
						"**/build/azDevOps/azure/ci-aeh-listener-vars.yml",
						"**/build/azDevOps/azure/ci-background-worker-vars.yml",
						"**/build/github/aws/**",
						"**/build/github/gcp/**",
						"**/deploy/aws/**",
						"**/deploy/gcp/**"
					]
				},
				{
					"condition": "(CloudProviderGcp)",
					"exclude": [
						"**/build/azDevOps/aws/**",
						"**/build/azDevOps/azure/**",
						"**/build/github/aws/**",
						"**/deploy/aws/**",
						"**/deploy/azure/**"
					]
				},
				{
					"condition": "(CloudProviderAws)",
					"exclude": [
						"**/build/azDevOps/azure/**",
						"**/build/azDevOps/gcp/**",
						"**/build/github/azure/**",
						"**/build/github/gcp/**",
						"**/build/github/aws/env/simple-api.env",
						"**/deploy/azure/**",
						"**/deploy/gcp/**"
					]
				},
				{
					"condition": "(CiCdAzure)",
					"exclude": [
						"**/build/github/**"
					]
				},
				{
					"condition": "(CiCdGitHub)",
					"exclude": [
						"**/build/azDevOps/**"
					]
				}
			]
		}
	],
	"SpecialCustomOperations": {
		"**/*.yml": {
			"Operations": [
				{
					"type": "conditional",
					"configuration": {
						"style": "line",
						"token": "#"
					}
				}
			]
		}
	}
}
