<?xml version="1.0"?>
<doc>
    <assembly>
        <name>xxAMIDOxx.xxSTACKSxx.API</name>
    </assembly>
    <members>
        <member name="T:xxAMIDOxx.xxSTACKSxx.API.Attributes.ValidateModelStateAttribute">
            <summary>
            Model state validation attribute
            </summary>
        </member>
        <member name="M:xxAMIDOxx.xxSTACKSxx.API.Attributes.ValidateModelStateAttribute.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            Called before the action method is invoked
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:xxAMIDOxx.xxSTACKSxx.API.Controllers.CategoryApiController">
            <summary>
            Category related operations
            </summary>
        </member>
        <member name="M:xxAMIDOxx.xxSTACKSxx.API.Controllers.CategoryApiController.AddMenuCategory(System.Nullable{System.Guid},xxAMIDOxx.xxSTACKSxx.Models.CreateOrUpdateCategory)">
            <summary>
            Create a category in the menu
            </summary>
            <remarks>Adds a category to menu</remarks>
            <param name="id">menu id</param>
            <param name="body">Category being added</param>
            <response code="201">Resource created</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized, Access token is missing or invalid</response>
            <response code="403">Forbidden, the user does not have permission to execute this operation</response>
            <response code="409">Conflict, an item already exists</response>
        </member>
        <member name="M:xxAMIDOxx.xxSTACKSxx.API.Controllers.CategoryApiController.DeleteCategory(System.Nullable{System.Guid},System.Nullable{System.Guid})">
            <summary>
            Removes a category and its items from menu
            </summary>
            <remarks>Removes a category and its items from menu</remarks>
            <param name="id">menu id</param>
            <param name="categoryId">Id for Category being removed</param>
            <response code="204">No Content</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized, Access token is missing or invalid</response>
            <response code="403">Forbidden, the user does not have permission to execute this operation</response>
            <response code="404">Resource not found</response>
        </member>
        <member name="M:xxAMIDOxx.xxSTACKSxx.API.Controllers.CategoryApiController.UpdateMenuCategory(System.Nullable{System.Guid},System.Nullable{System.Guid},xxAMIDOxx.xxSTACKSxx.Models.CreateOrUpdateCategory)">
            <summary>
            Update a category in the menu
            </summary>
            <remarks>Update a category to menu</remarks>
            <param name="id">menu id</param>
            <param name="categoryId">Id for Category being removed</param>
            <param name="body">Category being added</param>
            <response code="201">Resource created</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized, Access token is missing or invalid</response>
            <response code="403">Forbidden, the user does not have permission to execute this operation</response>
            <response code="409">Conflict, an item already exists</response>
        </member>
        <member name="T:xxAMIDOxx.xxSTACKSxx.API.Controllers.ItemApiController">
            <summary>
            Item related operations
            </summary>
        </member>
        <member name="M:xxAMIDOxx.xxSTACKSxx.API.Controllers.ItemApiController.AddMenuItem(System.Nullable{System.Guid},System.Nullable{System.Guid},xxAMIDOxx.xxSTACKSxx.Models.CreateOrUpdateMenuItem)">
            <summary>
            Create an item to a category in the menu
            </summary>
            <remarks>Adds a new item to a category in the menu</remarks>
            <param name="id">menu id</param>
            <param name="categoryId">Id for Category being removed</param>
            <param name="body">Category being added</param>
            <response code="201">Resource created</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized, Access token is missing or invalid</response>
            <response code="403">Forbidden, the user does not have permission to execute this operation</response>
            <response code="409">Conflict, an item already exists</response>
        </member>
        <member name="M:xxAMIDOxx.xxSTACKSxx.API.Controllers.ItemApiController.DeleteMenuItem(System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid})">
            <summary>
            Removes an item from menu
            </summary>
            <remarks>Removes an item from menu</remarks>
            <param name="id">menu id</param>
            <param name="categoryId">Category ID</param>
            <param name="itemId">Id for Item being removed</param>
            <response code="204">No Content</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized, Access token is missing or invalid</response>
            <response code="403">Forbidden, the user does not have permission to execute this operation</response>
            <response code="404">Resource not found</response>
        </member>
        <member name="M:xxAMIDOxx.xxSTACKSxx.API.Controllers.ItemApiController.UpdateMenuItem(System.Nullable{System.Guid},System.Nullable{System.Guid},System.Nullable{System.Guid},xxAMIDOxx.xxSTACKSxx.Models.CreateOrUpdateMenuItem)">
            <summary>
            Update an item in the menu
            </summary>
            <remarks>Update an  item in the menu</remarks>
            <param name="id">Id for menu</param>
            <param name="categoryId">Id for Category</param>
            <param name="itemId">Id for item being updated</param>
            <param name="body">Category being added</param>
            <response code="201">Resource created</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized, Access token is missing or invalid</response>
            <response code="403">Forbidden, the user does not have permission to execute this operation</response>
            <response code="409">Conflict, an item already exists</response>
        </member>
        <member name="T:xxAMIDOxx.xxSTACKSxx.API.Controllers.MenuApiController">
            <summary>
            Menu related operations
            </summary>
        </member>
        <member name="M:xxAMIDOxx.xxSTACKSxx.API.Controllers.MenuApiController.AddMenu(xxAMIDOxx.xxSTACKSxx.Models.CreateOrUpdateMenu)">
            <summary>
            Create a menu
            </summary>
            <remarks>Adds a menu</remarks>
            <param name="body">Menu being added</param>
            <response code="201">Resource created</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized, Access token is missing or invalid</response>
            <response code="403">Forbidden, the user does not have permission to execute this operation</response>
            <response code="409">Conflict, an item already exists</response>
        </member>
        <member name="M:xxAMIDOxx.xxSTACKSxx.API.Controllers.MenuApiController.DeleteMenu(System.Nullable{System.Guid})">
            <summary>
            Removes a menu with all its categories and items
            </summary>
            <remarks>Remove a menu from a restaurant</remarks>
            <param name="id">menu id</param>
            <response code="204">No Content</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized, Access token is missing or invalid</response>
            <response code="403">Forbidden, the user does not have permission to execute this operation</response>
            <response code="404">Resource not found</response>
        </member>
        <member name="M:xxAMIDOxx.xxSTACKSxx.API.Controllers.MenuApiController.GetMenu(System.Nullable{System.Guid})">
            <summary>
            Get a menu
            </summary>
            <remarks>By passing the menu id, you can get access to available categories and items in the menu </remarks>
            <param name="id">menu id</param>
            <response code="200">Menu</response>
            <response code="400">Bad Request</response>
            <response code="404">Resource not found</response>
        </member>
        <member name="M:xxAMIDOxx.xxSTACKSxx.API.Controllers.MenuApiController.GetMenuV2(System.Nullable{System.Guid})">
            <summary>
            Get a menu
            </summary>
            <remarks>By passing the menu id, you can get access to available categories and items in the menu </remarks>
            <param name="id">menu id</param>
            <response code="200">Menu</response>
            <response code="400">Bad Request</response>
            <response code="404">Resource not found</response>
        </member>
        <member name="M:xxAMIDOxx.xxSTACKSxx.API.Controllers.MenuApiController.SearchMenu(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get or search a list of menus
            </summary>
            <remarks>By passing in the appropriate options, you can search for available menus in the system </remarks>
            <param name="search">pass an optional search string for looking up menus</param>
            <param name="offset">number of records to skip for pagination</param>
            <param name="size">maximum number of records to return</param>
            <response code="200">search results matching criteria</response>
            <response code="400">bad request</response>
            <response code="404">Resource not found</response>
        </member>
        <member name="M:xxAMIDOxx.xxSTACKSxx.API.Controllers.MenuApiController.UpdateMenu(System.Nullable{System.Guid},xxAMIDOxx.xxSTACKSxx.Models.CreateOrUpdateMenu)">
            <summary>
            Update a menu
            </summary>
            <remarks>Update a menu with new information</remarks>
            <param name="id">menu id</param>
            <param name="body">Menu being updated</param>
            <response code="204">No Content</response>
            <response code="400">Bad Request</response>
            <response code="401">Unauthorized, Access token is missing or invalid</response>
            <response code="403">Forbidden, the user does not have permission to execute this operation</response>
            <response code="404">Resource not found</response>
        </member>
        <member name="T:xxAMIDOxx.xxSTACKSxx.API.Filters.BasePathFilter">
            <summary>
            BasePath Document Filter sets BasePath property of Swagger and removes it from the individual URL paths
            </summary>
        </member>
        <member name="M:xxAMIDOxx.xxSTACKSxx.API.Filters.BasePathFilter.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="basePath">BasePath to remove from Operations</param>
        </member>
        <member name="P:xxAMIDOxx.xxSTACKSxx.API.Filters.BasePathFilter.BasePath">
            <summary>
            Gets the BasePath of the Swagger Doc
            </summary>
            <returns>The BasePath of the Swagger Doc</returns>
        </member>
        <member name="M:xxAMIDOxx.xxSTACKSxx.API.Filters.BasePathFilter.Apply(Swashbuckle.AspNetCore.Swagger.SwaggerDocument,Swashbuckle.AspNetCore.SwaggerGen.DocumentFilterContext)">
            <summary>
            Apply the filter
            </summary>
            <param name="swaggerDoc">SwaggerDocument</param>
            <param name="context">FilterContext</param>
        </member>
        <member name="T:xxAMIDOxx.xxSTACKSxx.API.Filters.GeneratePathParamsValidationFilter">
            <summary>
            Path Parameter Validation Rules Filter
            </summary>
        </member>
        <member name="M:xxAMIDOxx.xxSTACKSxx.API.Filters.GeneratePathParamsValidationFilter.Apply(Swashbuckle.AspNetCore.Swagger.Operation,Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext)">
            <summary>
            Constructor
            </summary>
            <param name="operation">Operation</param>
            <param name="context">OperationFilterContext</param>
        </member>
    </members>
</doc>
