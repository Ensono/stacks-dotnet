variables:
  - name: region
    value: {{ .Project.Cloud.Region }}
  - name: company
    value: {{ .Input.Business.Company }}
  - name: project
    value: {{ .Project.Name }}
  - name: domain
    value: {{ .Input.Business.Domain }}
  - name: self_repo
    value: {{ .Project.Name }}
  - name: self_generic_name
    value: $(company)-$(domain)

  # Azure DevOps Group containing the SONAR_TOKEN secret
  - group: replaceme

  - name: cloud_provider
    value: "azure"

  # Terraform Configuration

  # State configuration

  # Stacks operates Terraform states based on workspaces **IT IS VERY IMPORTANT** that you ensure a unique name for each application definition
  # Furthermore **IT IS VERY IMPORTANT** that you change the name of a workspace for each deployment stage
  # there are some best practices around this if you are going for feature based environments
  # - we suggest you create a runtime variable that is dynamically set based on a branch currently running
  # **`terraform_state_workspace: `**
  # avoid running anything past dev that is not on master
  # sample value: company-webapp
  - name: tf_state_rg
    value: {{ .Input.Terraform.Backend.Group }}
  - name: tf_state_storage
    value: {{ .Input.Terraform.Backend.Storage }}
  - name: tf_state_container
    value: {{ .Input.Terraform.Backend.Container }}
  - name: tf_state_key
    value: $(self_generic_name)
  - name: TF_FILE_INFRA_LOCATION
    value: deploy/azure/app/kube
  - name: TF_FILE_APP_LOCATION
    value: deploy/azure/app/aca

  # App Specific Taxonomy
  - name: resource_def_name
    value: $(self_generic_name)
  - name: component
    value: api
  - name: role
    value: backend
  - name: app_route
    value: /api/menu
  - name: app_name
    value: $(self_generic_name)
  - name: log_level
    value: Debug

  # Agent configuration
  - name: TaskctlVersion
    value: 1.5.2
  - name: pool_vm_image
    value: ubuntu-20.04

  # SelfConfig
  # If you haven't specified source_repo at cli runtime please ensure you replace it here
  # It is case sensitive for TFS based repos
  - name: self_repo_src
    value: src/simple-api/src/api
  - name: self_repo_dir
    value: "$(Agent.BuildDirectory)/s/$(self_repo)"
  - name: self_repo_tf_src
    value: deploy/azure/app/kube
  - name: self_repo_tf_dir
    value: "$(self_repo_dir)/$(self_repo_tf_src)"

  # SonarQube Configuration
  # SONAR_TOKEN must be inherited from library groups/etc.
  - name: sonar_organization
    value: {{ .Input.Business.Company }}
  - name: sonar_url
    value: "https://sonarcloud.io"
  - name: sonar_properties
    value: '/d:sonar.cs.opencover.reportsPaths="/app/coverage/*.opencover.xml" /d:sonar.exclusions="**/*Tests" /d:sonar.coverage.exclusions="**/*Tests"'
  - name: sonar_project_name
    value: {{ .Project.Name }}

  # Test Configuration
  - name: run_functional_tests
    value: true
  - name: FUNCTIONAL_TESTS_SRC_DIR
    value: src/simple-api/src/tests/Functional
  - name: FUNCTIONAL_TESTS_RUN_DIR
    value: /app/tests
  - name: FUNCTIONAL_TEST_BASEURL
    value: https://$(Environment.ShortName)-$(domain).$(dns_base_domain)$(app_route)/

  # Docker Container registry configuration (used for image tagging and pushing)
  # TODO: Despite being available in the TF State, these are required in other steps
  # TODO: which do not inherit the state variables yet
  # TODO: Promotion is now doing nothing as same registry for both envs, consider removing or creating another registry for Prod
  - name: docker_container_registry_rg_name_nonprod
    value:
  - name: docker_container_registry_name_nonprod
    value:
  - name: docker_container_registry_rg_name_prod
    value:
  - name: docker_container_registry_name_prod
    value:

  # Kubernetes & Docker Image Settings
  - name: docker_image_tag
    value: $(version_number)-$(Build.SourceBranchName)
  - name: docker_image_name
    value: $(self_generic_name)

  # DNS Configuration
  - name: create_dns_record
    value: true
  - name: core_resource_group_nonprod
    value:
  - name: public_ip_name_nonprod
    value:
  - name: core_resource_group_prod
    value:
  - name: public_ip_name_prod
    value:

  # Versioning
  - name: version_major
    value: 0
  - name: version_minor
    value: 0
  - name: version_revision
    value: $[counter(join(variables['version_major'], join('-', variables['version_minor'])), 0)]
  - name: version_number
    value: $(version_major).$(version_minor).$(version_revision)

  # Service Bus Configuration
  - name: servicebus_type
    value: null
  - name: create_servicebus_namespace
    value: false
  - name: create_servicebus_topic
    value: false
  - name: create_servicebus_subscription
    value: false

  # EventHub Configuration
  - name: create_eventhub
    value: false

  # Application
  - name: ingress_enabled
    value: true
  - name: create_resource_group
    value: true
  - name: create_cosmosdb
    value: false
