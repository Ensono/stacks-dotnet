variables:
- group: amido-stacks-infra-credentials-nonprod
- group: amido-stacks-menu-api
- group: amido-stacks-infra-nonprod
- group: amido-stacks-global
- name: Version.MajorMinor
  value: 1.0
- name: Version.Revision
  value: $[counter(variables['Version.MajorMinor'], 0)]
- name: Test.FunctionalTestProjectPath
  value: 'src/tests/xxAMIDOxx.xxSTACKSxx.Tests'

name: $(build.SourceBranchName)-init

trigger:
  paths:
    exclude:
    - src/services/api/xxAMIDOxx.xxSTACKSxx.Models


resources:
- repo: self

pool:
  vmImage: 'ubuntu-latest'

steps:

- script: echo '##vso[build.updatebuildnumber]$(Docker.ImageTag)'
  displayName: Update Build Number

- task: DotNetCoreCLI@2
  displayName: 'dotnet publish tests'
  inputs:
    command: publish
    projects: '$(Test.FunctionalTestProjectPath)'
    publishWebProjects: False
    arguments: ' --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: True

- script: |
    az login --service-principal --username $AZURE_CLIENT_ID --password $AZURE_CLIENT_SECRET --tenant $AZURE_TENANT_ID
    az account set -s $AZURE_SUBSCRIPTION_ID
    az acr login --name $ACR_NAME
  displayName: Azure login
  env:
    AZURE_CLIENT_SECRET: $(azure_client_secret)

- script: |
    echo $BUILD_BUILDNUMBER
    docker build . -t $DOCKER_IMAGENAME:$DOCKER_IMAGETAG -t $ACR_NAME.azurecr.io/$DOCKER_IMAGENAME:$DOCKER_IMAGETAG -t $ACR_NAME.azurecr.io/$DOCKER_IMAGENAME:latest
    docker push $ACR_NAME.azurecr.io/$DOCKER_IMAGENAME
  displayName: Docker Build and Push container
  workingDirectory: $(Build.SourcesDirectory)/$(Docker.DockerfilePath)

- task: PublishBuildArtifacts@1
  displayName: Publish Artifact - Deploy scripts
  inputs:
    PathtoPublish: '$(Build.SourcesDirectory)/deploy/scripts'
    ArtifactName: 'deploy'

- task: PublishBuildArtifacts@1
  displayName: Publish Artifact - Functional Tests
  inputs:
    PathtoPublish: '$(Build.SourcesDirectory)/$(Test.FunctionalTestProjectPath)'
    ArtifactName: 'tests'

- task: PublishBuildArtifacts@1
  displayName: Publish Artifact - YML files 
  inputs:
    PathtoPublish: '$(Build.SourcesDirectory)/$(Kubernetes.YMLfilepath)'
    ArtifactName: 'yml'
