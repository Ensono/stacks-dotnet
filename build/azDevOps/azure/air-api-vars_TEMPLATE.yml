variables:
  - name: region
    value: {{ .Project.Cloud.Region }}
  - name: company
    value: {{ .Input.Business.Company }}
  - name: project
    value: {{ .Project.Name }}
  - name: domain
    value: {{ .Input.Business.Domain }}
  - name: self_repo
    value: {{ .Project.Name }}
  - name: self_generic_name
    value: $(company)-$(domain)

  - name: cloud_provider
    value: "azure"

  # Terraform Configuration

  # State configuration

  # Stacks operates Terraform states based on workspaces **IT IS VERY IMPORTANT** that you ensure a unique name for each application definition
  # Furthermore **IT IS VERY IMPORTANT** that you change the name of a workspace for each deployment stage
  # there are some best practices around this if you are going for feature based environments
  # avoid running anything past dev that is not on master
  - name: tf_state_rg
    value: {{ .Input.Terraform.Backend.Group }}
  - name: tf_state_storage
    value: {{ .Input.Terraform.Backend.Storage }}
  - name: tf_state_container
    value: {{ .Input.Terraform.Backend.Container }}
  - name: tf_state_key
    value: $(self-generic-name)
  - name: TF_FILE_LOCATION
    value: deploy/azure/app/kube

  # App Specific Taxonomy
  - name: resource_def_name
    value: $(company)-$(domain)
  - name: component
    value: api
  - name: role
    value: backend
  - name: k8s_app_route
    value: /api/menu
  - name: app_name
    value: $(company)-$(domain)

  # Agent configuration
  - name: TaskctlVersion
    value: 1.4.2
  - name: pool_vm_image
    value: ubuntu-20.04

  # SelfConfig
  # If you haven't specified source_repo at cli runtime please ensure you replace it here
  # It is case sensitive for TFS based repos
  - name: self_repo_src
    value: src/api
  - name: self_repo_dir
    value: "$(Agent.BuildDirectory)/s/$(self_repo)"
  - name: self_repo_tf_src
    value: deploy/azure/app/kube
  - name: self_repo_tf_dir
    value: "$(self_repo_dir)/$(self_repo_tf_src)"

  # SonarQube Configuration
  # SONAR_TOKEN and SONAR_ORGANIZATION must be inherited from library groups/etc.
  - name: sonar_url
    value: "https://sonarcloud.io"
  - name: sonar_properties
    value: '/d:sonar.cs.opencover.reportsPaths="/app/coverage/*.opencover.xml" /d:sonar.exclusions="**/*Tests" /d:sonar.coverage.exclusions="**/*Tests"'
  - name: sonar_project_name
    value: {{ .Project.Name }}

  # Test Configuration
  - name: FUNCTIONAL_TESTS_SRC_DIR
    value: src/tests/Functional
  - name: FUNCTIONAL_TESTS_RUN_DIR
    value: /app/tests
  - name: FUNCTIONAL_TEST_BASEURL
    value: https://$(Environment.ShortName)-$(domain).$(dns_base_domain)$(k8s_app_route)/

  # Docker Container registry configuration (used for image tagging and pushing)
  # TODO: Despite being available in the TF State, these are required in other steps
  # TODO: which do not inherit the state variables yet
  - name: docker_container_registry_rg_name_nonprod
    value:
  - name: docker_container_registry_name_nonprod
    value:
  - name: docker_container_registry_rg_name_prod
    value:
  - name: docker_container_registry_name_prod
    value:

  # Kubernetes & Docker Image Settings
  - name: docker_image_tag
    value: $(version_number)-$(Build.SourceBranchName)
  - name: docker_image_name
    value: $(self_generic_name)

  # TODO: Despite being available in the TF State, these are required in other steps
  # TODO: which do not inherit the state variables yet
  - name: k8s_cluster_target_nonprod
    value:
  - name: k8s_cluster_identifier_nonprod
    value:
  - name: k8s_cluster_target_prod
    value:
  - name: k8s_cluster_identifier_prod
    value:

  # Kubernetes target file location
  - name: k8s_resource_file
    value: "deploy/k8s/app/api-deploy.yml"

  # Helm file locations
  - name: helm_chart_file
    value: "deploy/helm/stacks-dotnet"
  - name: helm_value_file
    value: "deploy/helm/stacks-dotnet/values.yaml"

  # Versioning
  - name: version_major
    value: 0
  - name: version_minor
    value: 0
  - name: version_revision
    value: $[counter(join(variables['version_major'], join('-', variables['version_minor'])), 0)]
  - name: version_number
    value: $(version_major).$(version_minor).$(version_revision)

  # Dashboard
  - name: DASHBOARD_VERSION
    value: $(Build.BuildNumber)
  - name: DASHBOARD_TAGS
    value: environment=$(System.StageName),source=$(Build.SourceBranchName),app=$(Build.DefinitionName)
  - name: DASHBOARD_MEASUREMENT
    value: deployment # Static definition within Influx Config
   # - group: InfluxCloud_Credentials_Group_Name
    # Group should contain:
      # DASHBOARD_INFLUX_ORG
      # DASHBOARD_INFLUX_BUCKET
      # DASHBOARD_INFLUX_TOKEN
      # DASHBOARD_INFLUX_SERVER
