name: $(build.SourceBranchName)-init

#trigger:
#  paths:
#    exclude:
#    - src/api/xxAMIDOxx.xxSTACKSxx.API.Models
#    - deploy/terraform

resources:
- repo: self

variables:
- group: amido-stacks-infra-credentials-nonprod
- group: amido-stacks-pact-credentials

# Versioning
- name: Version.Major
  value: 1
- name: Version.Minor
  value: 2
- name: Version.MajorMinor
  value: $(Version.Major).$(Version.Minor)
- name: Version.Revision
  value: $[counter(variables['Version.MajorMinor'], 0)]

# Tests
- name: Test.ProviderContractTestProjectSourcePath
  value: '$(Build.SourcesDirectory)/src/api/xxAMIDOxx.xxSTACKSxx.API.ContractTests'

# Pact Broker Info
- name: Test.PactBrokerUrl
  value: https://amido-stacks.pact.dius.com.au
- name: Test.PactApiToken
  value: r2xlwu-YY3_sl0o0s03O3g

# Docker Config
# - name: Docker.DockerfilePath
#   value: src/api/
# - name: Docker.ImageName
#   value: menu-api
- name: Docker.ImageTag
  value: $(Version.MajorMinor).$(Version.Revision)-$(build.sourcebranchname)
# - name: Docker.ContainerRegistry
#   value: amidouksstacksacrnp.azurecr.io

#Â Kubernetes Config:
- name: Kubernetes.YMLfilepath
  value: deploy/k8s/api

# Packages Config:
# - name: Kubernetes.KustomizeBinaryPath
#   value: $(System.DefaultWorkingDirectory)/kustomize
# - name: Kubernetes.KustomizeDownloadPath
#   value: https://github.com/kubernetes-sigs/kustomize/releases/download/v2.0.3/kustomize_2.0.3_linux_amd64

# Package Info
# - name: Package.File
#   value: scripts-0.0.32-master.tar.gz
# - name: Package.SAS
#   value: 'se=2019-09-08T10%3A15Z&sp=rl&sv=2018-03-28&ss=b&srt=sco&sig=EP4xmbIf3pcJK4dbUrmxwLP9gFXVVyDV2FNYSTvAdR4%3D'

# Specific Contract Test Variable Declarations
- name: BROKER_URL
  value: $(Test.PactBrokerUrl)
- name: BUILD_NUMBER
  value: $(Docker.ImageTag)
- name: BROKER_TOKEN
  value: $(Test.PactApiToken)

stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      vmImage: 'ubuntu-latest'
    continueOnError: False
    steps:
    - script: echo '##vso[build.updatebuildnumber]$(Docker.ImageTag)'
      displayName: Update Build Number

#     - bash: | 
#         wget -O $(Build.BinariesDirectory)/$(Package.File)  'https://amidostackspkgukstmp.blob.core.windows.net/packages/$(Package.File)?$(Package.SAS)'
#       displayName: Get DevOps Scripts
#       workingDirectory: $(Build.BinariesDirectory)
    
#     - task: ExtractFiles@1
#       inputs:
#         archiveFilePatterns: '$(Build.BinariesDirectory)/$(Package.File)' 
#         destinationFolder: $(Build.BinariesDirectory)/DevOps
#       displayName: Extract DevOps Scripts

#     - task: Bash@3
#       displayName: Install CICD Prereqs
#       inputs:
#         targetType: 'filePath'
#         filePath: $(Build.BinariesDirectory)/DevOps/Bootstrap/install-cicd-prereqs.sh
#         arguments: $(Kubernetes.KustomizeBinaryPath) $(Kubernetes.KustomizeDownloadPath)

# # This is problematic because it doesn't inherit the Azure login information
# #
#     - task: Bash@3
#       displayName: Azure Login
#       inputs:
#         targetType: 'filePath'
#         filePath: $(Build.BinariesDirectory)/DevOps/Azure/set-azure-context.sh
#         arguments: $(azure_tenant_id) $(azure_subscription_id) $(azure_client_id) $(azure_client_secret)
#         failOnStderr: true 

#     - bash: |
#         az acr login --name amidouksstacksacrnp # this is super annoying
#         docker build . -t $(Docker.ImageName):$(Docker.ImageTag) -t $(Docker.ContainerRegistry)/$(Docker.ImageName):$(Docker.ImageTag) -t $(Docker.ContainerRegistry)/$(Docker.ImageName):latest
#         docker push $(Docker.ContainerRegistry)/$(Docker.ImageName)
#       displayName: Docker Build and Push to Az ACR
#       workingDirectory: $(Build.SourcesDirectory)/$(Docker.DockerfilePath)

    - task: DotNetCoreCLI@2
      displayName: 'Run Provider Contract Tests'
      inputs:
        command: test
        projects: '$(Test.ProviderContractTestProjectSourcePath)/*.csproj'
        arguments: '-v n'
        testRunTitle: 'Provider Contract Tests'
      continueOnError: true
    
    # - publish: $(Build.SourcesDirectory)/$(Kubernetes.YMLfilepath)
    #   artifact: build
    #   displayName: Publish Build Artefacts
