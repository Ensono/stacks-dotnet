variables:
  - name: region
    value: westeurope
  - name: company
    value: amido
  - name: project
    value: stacks
  - name: domain
    value: netcore-api
  - name: self_repo
    value: stacks-dotnet
  - name: self_generic_name
    value: stacks-api

  # Terraform Configuration

  # State configuration

  # Stacks operates Terraform states based on workspaces **IT IS VERY IMPORTANT** that you ensure a unique name for each application definition
  # Furthermore **IT IS VERY IMPORTANT** that you change the name of a workspace for each deployment stage
  # there are some best practices around this if you are going for feature based environments
  # - we suggest you create a runtime variable that is dynamically set based on a branch currently running
  # **`terraform_state_workspace: `**
  # avoid running anything past dev that is not on master
  # sample value: company-webapp
  - name: tf_state_rg
    value: Stacks-Ancillary-Resources
  - name: tf_state_storage
    value: amidostackstfstate
  - name: tf_state_container
    value: tfstate
  - name: tf_state_key
    value: netcore-api

  # TF File location in Repo
  - name: TF_FILE_LOCATION
    value: deploy/azure/app/kube

  # GitHub infomration
  - name: create_release
    value: true
  - name: github_release_service_connection
    value: GitHubReleases
  - name: github_org
    value: $(company)

  # TaskCTL configuration
  - name: TaskctlVersion
    value: 1.4.2
