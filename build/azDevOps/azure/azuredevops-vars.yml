variables:
  - name: company
    value: amido
  - name: project
    value: stacks
  - name: domain
    value: netcore-api
  - name: self_repo
    value: stacks-dotnet
  - name: self_generic_name
    value: stacks-api

  # TF STATE CONFIG

  # Stacks operates Terraform states based on workspaces **IT IS VERY IMPORTANT** that you ensure a unique name for each application definition
  # Furthermore **IT IS VERY IMPORTANT** that you change the name of a workspace for each deployment stage
  # there are some best practices around this if you are going for feature based environments
  # - we suggest you create a runtime variable that is dynamically set based on a branch currently running
  # **`terraform_state_workspace: `**
  # avoid running anything past dev that is not on master
  # sample value: company-webapp
  - name: tf_state_rg
    value: Stacks-Ancillary-Resources
  - name: tf_state_storage
    value: amidostackstfstate
  - name: tf_state_container
    value: tfstate
  - name: tf_state_key
    value: netcore-api
  - name: docker_container_registry_name_nonprod
    value: amidostacksnonprodeuwcore
  - name: docker_container_registry_name_prod
    value: amidostacksprodeuwcore
  - name: region
    value: westeurope
  - name: base_domain_nonprod
    value: nonprod.amidostacks.com
  - name: base_domain_internal_nonprod
    value: nonprod.amidostacks.internal
  - name: base_domain_prod
    value: prod.amidostacks.com
  - name: base_domain_internal_prod
    value: prod.amidostacks.internal

  # Environment
  # Set the name of the resource group that has the DNS zones to be updated
  - name: dns_zone_resource_group
    value: "Stacks-Ancillary-Resources"    
