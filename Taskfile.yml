# https://taskfile.dev

version: '3'

env:
  PROJECT_NAME:

tasks:

  lint:
    desc: Perform Linting checks
    cmds:
      - pwsh -NoProfile -Command build/scripts/Invoke-YamlLint.ps1
      - pwsh -NoProfile -Command build/scripts/Invoke-TerraformLint.ps1 -Format
      - pwsh -NoProfile -Command build/scripts/Invoke-TerraformLint.ps1 -Validate

  build:
    desc: Compile the .NET application
    deps:
      - lint
      - test:sonarcloud
      - test:unittest
      - test:component
      - test:integration
      - test:contract

    cmds:
      - task: test:coverage


  test:sonarcloud:
    desc: Perform SonarScanner run
    cmds:
      - pwsh -NoProfile -Command build/scripts/Invoke-SonarScanner.ps1 -buildversion $BUILD_BUILDNUMBER
      - pwsh -NoProfile -Command build/scripts/Build-Dotnet.ps1

    status:
      - test -n "${SONAR_NO_RUN-}"

  test:unittest:
    desc: Perform unit tests
    cmds:
      - pwsh -NoProfile -Command build/scripts/Invoke-DotNetTests.ps1
    env:
      arguments: "-v q /p:CollectCoverage=true /p:CoverletOutputFormat=opencover"
      pattern: "*UnitTests"
    status:
      - test -n "${UNITTEST_NO_RUN-}"

  test:component:
    desc: Perform component tests
    cmds:
      - pwsh -NoProfile -Command build/scripts/Invoke-DotNetTests.ps1
    env:
      arguments: "-v q /p:CollectCoverage=true /p:CoverletOutputFormat=opencover"
      pattern: "*ComponentTests"
    status:
      - test -n "${COMPONENTTEST_NO_RUN-}"

  # TODO: Need to work out how to pass in additional environment variables that may have been set
  # They will not always have the same name so we need to accept a list of them, which may not always
  # be formatted correctly for this conversion to be done
  test:integration:
    desc: Perform integration tests
    cmds:
      - pwsh -NoProfile -Command build/scripts/Invoke-DotNetTests.ps1
    env:
      arguments: "-v q /p:CollectCoverage=true /p:CoverletOutputFormat=opencover"
      pattern: "*IntegrationTests"
    status:
      - test -n "${INTEGRATIONTEST_NO_RUN-}"

  # TODO: Need to work out how to pass in additional environment variables that may have been set
  # They will not always have the same name so we need to accept a list of them, which may not always
  # be formatted correctly for this conversion to be done
  test:contract:
    desc: Perform contract tests
    cmds:
      - pwsh -NoProfile -Command build/scripts/Invoke-DotNetTests.ps1
    env:
      arguments: "-v q /p:CollectCoverage=true /p:CoverletOutputFormat=opencover"
      pattern: "*ContractTests"
    status:
      - test -n "${CONTRACTTEST_NO_RUN-}"

  test:coverage:
    desc: Generate test coverage reports
    cmds:
      - pwsh -NoProfile -Command build/scripts/Invoke-DotNetCoverage.ps1
